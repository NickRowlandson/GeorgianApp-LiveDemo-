{"version":3,"sources":["../../client/app/guards/client.guard.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;gBAOI,qBAAoB,MAAc,EAAU,WAAwB;oBAAhD,WAAM,GAAN,MAAM,CAAQ;oBAAU,gBAAW,GAAX,WAAW,CAAa;gBAAI,CAAC;gBAEzE,iCAAW,GAAX;oBACI,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;oBAClE,IAAI,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;oBAEpC,EAAE,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;wBAC1B,MAAM,CAAC,IAAI,CAAC;oBACd,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,0CAA0C;wBAC1C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;wBACrC,MAAM,CAAC,KAAK,CAAC;oBACf,CAAC;gBACL,CAAC;gBAfQ,WAAW;oBADvB,iBAAU,EAAE;qDAGmB,eAAM,EAAuB,oCAAW;mBAF3D,WAAW,CAgBvB;gBAAD,kBAAC;aAhBD,AAgBC;;QACD,CAAC","file":"client.guard.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/authentication.service';\r\n\r\n@Injectable()\r\nexport class ClientGuard implements CanActivate {\r\n\r\n    constructor(private router: Router, private authService: AuthService) { }\r\n\r\n    canActivate() {\r\n        var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        var userType = currentUser.userType;\r\n\r\n        if (userType === \"Client\") {\r\n          return true;\r\n        } else {\r\n          // not logged in so redirect to login page\r\n          this.router.navigate(['/dashboard']);\r\n          return false;\r\n        }\r\n    }\r\n}\r\n"]}