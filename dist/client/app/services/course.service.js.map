{"version":3,"sources":["../../client/app/services/course.service.ts"],"names":[],"mappings":"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","file":"course.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response, RequestOptions } from '@angular/http';\r\nimport { Course } from \"../models/course\";\r\nimport { Student } from \"../models/student\";\r\nimport { AuthService } from './authentication.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n@Injectable()\r\nexport class CourseService {\r\n\r\n  private courseUrl = 'api/course';  // URL to web app\r\n\r\n  constructor(private http: Http,\r\n    private authService: AuthService) { }\r\n\r\n  getCourses(): Promise<Course[]> {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http.get(this.courseUrl, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Get Courses\"));\r\n  }\r\n\r\n  getInstructorCourses(id: string): Promise<Course[]> {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let url = \"api/instructor-courses/\" + id;\r\n\r\n    return this.http.get(url, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Get Intructors Courses\"));\r\n  }\r\n\r\n  getCourse(id: string) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http.get(this.courseUrl + '/' + id, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Get Course\"));\r\n  }\r\n\r\n  getWaitList() {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http.get('api/wait-list', options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Get waitlist\"));\r\n  }\r\n\r\n  getWaitListById(userID) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let url = \"api/wait-list-by-id/\" + userID;\r\n\r\n    return this.http.get(url, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Get course wait list by id\"));\r\n  }\r\n\r\n  addToWaitList(userID, courseType, date) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n    var info = {\r\n      userID: userID,\r\n      courseType: courseType,\r\n      date: date\r\n    };\r\n    return this.http\r\n      .post('/api/addToWaitList', info, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"addToWaitList\"));\r\n  }\r\n\r\n  removeFromWaitList(userID, courseType) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let url = `${this.courseUrl}/${userID}/${courseType}`;\r\n    return this.http\r\n      .delete(url, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"removeFromWaitList\"));\r\n  }\r\n\r\n  addToCourseTypes(courseType) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n    var info = {\r\n      courseType: courseType\r\n    };\r\n    return this.http\r\n      .post('/api/addToCourseTypes', info, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"addToCourseTypes\"));\r\n  }\r\n\r\n  delete(course: Course) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    //headers.append('Content-Type', 'application/json');\r\n\r\n    let url = `${this.courseUrl}/${course.courseID}`;\r\n\r\n    return this.http\r\n      .delete(url, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Delete Course\"));\r\n  }\r\n\r\n  create(course: Course): Promise<Course> {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http\r\n      .post(this.courseUrl, course, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Create New Course\"));\r\n  }\r\n\r\n  update(course: Course) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let url = `${this.courseUrl}/${course.courseID}`;\r\n    return this.http\r\n      .put(url, course, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Update Course\"));\r\n  }\r\n\r\n  getCourseTypes() {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http.get('api/getCourseTypes', options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Get Course Types\"));\r\n  }\r\n\r\n  getCampuses() {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http.get('api/getCampuses', options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Get Campuses\"));\r\n  }\r\n\r\n\r\n  getInstructors() {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http.get('api/getInstructors', options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Get Instructors\"));\r\n  }\r\n\r\n  private handleError(error: any, name: any) {\r\n    console.log('An error occurred at ' + name, error);\r\n  }\r\n\r\n}\r\n"]}