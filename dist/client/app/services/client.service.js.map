{"version":3,"sources":["../../client/app/services/client.service.ts"],"names":[],"mappings":"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","file":"client.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response, RequestOptions } from '@angular/http';\r\nimport { AuthService } from './authentication.service';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Client } from \"../models/client\";\r\nimport { ConsentForm } from \"../models/consentForm\";\r\nimport { LearningStyleForm } from \"../models/learningStyleForm\";\r\nimport { SuitabilityForm } from \"../models/suitabilityForm\";\r\n\r\n@Injectable()\r\nexport class ClientService {\r\n\r\n    private clientUrl = 'api/clients';  // URL to web api\r\n\r\n    constructor(private http: Http, private authService: AuthService) { }\r\n\r\n    getClients(): Promise<Client[]> {\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        return this.http.get(this.clientUrl, options)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    getClient(id: string) {\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n        return this.http.get(this.clientUrl + '/' + id, options)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    save(client: Client, suitabilityForm: SuitabilityForm): Promise<Client> {\r\n        if (client.clientID) {\r\n            return this.put(client, suitabilityForm);\r\n        }\r\n        return this.post(client, suitabilityForm);\r\n    }\r\n\r\n    saveConsent(consentForm: ConsentForm): Promise<Client> {\r\n      // get current user id from web token\r\n      var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n      var currentUserID = currentUser.userID;\r\n      let url = `api/clientForms/${currentUserID}/consent`;\r\n      // add authorization header with jwt token\r\n      let headers = new Headers({ authorization: this.authService.token });\r\n      let options = new RequestOptions({ headers: headers });\r\n      let objects = ({ consentForm: consentForm });\r\n      return this.http\r\n          .post(url, objects, options)\r\n          .toPromise()\r\n          .then(response => response.json().data)\r\n          .catch(this.handleError);\r\n    }\r\n\r\n    getConsentById(): Promise<ConsentForm>  {\r\n      // get current user id from web token\r\n      var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n      var currentUserID = currentUser.userID;\r\n      let url = `api/clientForms/consent/${currentUserID}`;\r\n      // add authorization header with jwt token\r\n      let headers = new Headers({ authorization: this.authService.token });\r\n      let options = new RequestOptions({ headers: headers });\r\n      return this.http\r\n          .get(url, options)\r\n          .toPromise()\r\n          .then(response => response.json())\r\n          .catch(this.handleError);\r\n    }\r\n\r\n    saveLearningStyle(learningStyleForm: LearningStyleForm): Promise<Client> {\r\n      // get current user id from web token\r\n      var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n      var currentUserID = currentUser.userID;\r\n      let url = `api/clientForms/${currentUserID}/learningStyle`;\r\n      // add authorization header with jwt token\r\n      let headers = new Headers({ authorization: this.authService.token });\r\n      let options = new RequestOptions({ headers: headers });\r\n      let objects = ({ learningStyleForm: learningStyleForm });\r\n      return this.http\r\n          .post(url, objects, options)\r\n          .toPromise()\r\n          .then(response => response.json().data)\r\n          .catch(this.handleError);\r\n    }\r\n\r\n    private post(client: Client, suitabilityForm: SuitabilityForm): Promise<Client> {\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n        let objects = ({ client: client, suitabilityForm: suitabilityForm });\r\n        return this.http\r\n            .post(this.clientUrl, objects, options)\r\n            .toPromise()\r\n            .then(response => {\r\n              return response.json();\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    addSuitability(client, suitabilityForm: SuitabilityForm): Promise<Client> {\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        var url = this.clientUrl + \"/\" + client.userID;\r\n\r\n        return this.http\r\n            .post(url, suitabilityForm, options)\r\n            .toPromise()\r\n            .then(response => {\r\n              return response.json();\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    updateSuitability(suitabilityForm: SuitabilityForm): Promise<Client> {\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        var url = 'api/suitability-update';\r\n\r\n        return this.http\r\n            .put(url, suitabilityForm, options)\r\n            .toPromise()\r\n            .then(response => {\r\n              return response.json();\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    updateBannerCamBool(client: Client): Promise<Client> {\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        var url = 'api/bannerCamBool-update';\r\n\r\n        return this.http\r\n            .put(url, client, options)\r\n            .toPromise()\r\n            .then(response => {\r\n              return response.json();\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    private put(client: Client, suitabilityForm: SuitabilityForm) {\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n        let objects = ({ client: client, suitabilityForm: suitabilityForm });\r\n        let url = `${this.clientUrl}/${client.clientID}`;\r\n        return this.http\r\n            .put(url, objects, options)\r\n            .toPromise()\r\n            .then(() => client)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    delete(client) {\r\n      console.log(client.userID);\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        let url = `${this.clientUrl}/${client.userID}`;\r\n\r\n        return this.http\r\n            .delete(url, options)\r\n            .toPromise()\r\n            .then(result => {\r\n              console.log(result);\r\n            })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    removeFromClientTable(userID) {\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        let url = `${this.clientUrl}/${userID}/remove`;\r\n\r\n        return this.http\r\n            .delete(url, options)\r\n            .toPromise()\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        console.log('An error occurred', error);\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}\r\n"]}