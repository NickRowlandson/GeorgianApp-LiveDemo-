{"version":3,"sources":["../../client/app/services/client.service.ts"],"names":[],"mappings":"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","file":"client.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response, RequestOptions } from '@angular/http';\r\nimport { AuthService } from './authentication.service';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Client } from \"../models/client\";\r\nimport { ConsentForm } from \"../models/consentForm\";\r\nimport { LearningStyleForm } from \"../models/learningStyleForm\";\r\nimport { SuitabilityForm } from \"../models/suitabilityForm\";\r\nimport { AssessmentResults } from \"../models/assessmentResults\";\r\n\r\n@Injectable()\r\nexport class ClientService {\r\n\r\n    private clientUrl = 'api/clients';  // URL to web api\r\n\r\n    constructor(private http: Http, private authService: AuthService) { }\r\n\r\n    getClients(): Promise<Client[]> {\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        return this.http\r\n            .get(this.clientUrl, options)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(err => this.handleError(err, \"Get clients\"));\r\n    }\r\n\r\n    getClient(id: string) {\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n        return this.http\r\n            .get(this.clientUrl + '/' + id, options)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(err => this.handleError(err, \"Get client\"));\r\n    }\r\n\r\n    create(client: Client, suitabilityForm: SuitabilityForm): Promise<Client> {\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n        let objects = ({ client: client, suitabilityForm: suitabilityForm });\r\n        return this.http\r\n            .post(this.clientUrl, objects, options)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(err => this.handleError(err, \"Create client\"));\r\n    }\r\n\r\n    saveConsent(consentForm: ConsentForm): Promise<ConsentForm> {\r\n      // get current user id from web token\r\n      var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n      var currentUserID = currentUser.userID;\r\n      let url = `api/clientForms/${currentUserID}/consent`;\r\n      // add authorization header with jwt token\r\n      let headers = new Headers({ authorization: this.authService.token });\r\n      let options = new RequestOptions({ headers: headers });\r\n      let objects = ({ consentForm: consentForm });\r\n      return this.http\r\n          .post(url, objects, options)\r\n          .toPromise()\r\n          .then(response => response.json().data)\r\n          .catch(err => this.handleError(err, \"Save consent\"));\r\n    }\r\n\r\n    requestEditConsent(): Promise<Client> {\r\n      // get current user id from web token\r\n      var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n      var currentUserID = currentUser.userID;\r\n      let url = `api/clientForms/${currentUserID}/requestEditConsent`;\r\n      // add authorization header with jwt token\r\n      let headers = new Headers({ authorization: this.authService.token });\r\n      let options = new RequestOptions({ headers: headers });\r\n\r\n      return this.http\r\n          .put(url, options)\r\n          .toPromise()\r\n          .then(response => response.json())\r\n          .catch(err => this.handleError(err, \"Request to edit consent\"));\r\n    }\r\n\r\n    grantConsentEditPermission(client, permission): Promise<Client> {\r\n      // get current user id from web token\r\n      let url = `api/clientForms/grantConsentEditPermission`;\r\n      // add authorization header with jwt token\r\n      let headers = new Headers({ authorization: this.authService.token });\r\n      let options = new RequestOptions({ headers: headers });\r\n      let objects = ({ client: client, permission:permission });\r\n      return this.http\r\n          .put(url, objects, options)\r\n          .toPromise()\r\n          .then(response => response.json())\r\n          .catch(err => this.handleError(err, \"Grant permission to edit consent\"));\r\n    }\r\n\r\n    getConsentById(): Promise<ConsentForm>  {\r\n      // get current user id from web token\r\n      var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n      var currentUserID = currentUser.userID;\r\n      let url = `api/clientForms/consent/${currentUserID}`;\r\n      // add authorization header with jwt token\r\n      let headers = new Headers({ authorization: this.authService.token });\r\n      let options = new RequestOptions({ headers: headers });\r\n      return this.http\r\n          .get(url, options)\r\n          .toPromise()\r\n          .then(response => response.json())\r\n          .catch(err => this.handleError(err, \"Get consent by id\"));\r\n    }\r\n\r\n    getLearningStyleById(): Promise<LearningStyleForm>  {\r\n      // get current user id from web token\r\n      var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n      var currentUserID = currentUser.userID;\r\n      let url = `api/clientForms/learningStyle/${currentUserID}`;\r\n      // add authorization header with jwt token\r\n      let headers = new Headers({ authorization: this.authService.token });\r\n      let options = new RequestOptions({ headers: headers });\r\n      return this.http\r\n          .get(url, options)\r\n          .toPromise()\r\n          .then(response => response.json())\r\n          .catch(err => this.handleError(err, \"Get learning style\"));\r\n    }\r\n\r\n    saveLearningStyle(learningStyleForm: LearningStyleForm): Promise<LearningStyleForm> {\r\n      // get current user id from web token\r\n      var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n      var currentUserID = currentUser.userID;\r\n      let url = `api/clientForms/${currentUserID}/learningStyle`;\r\n      // add authorization header with jwt token\r\n      let headers = new Headers({ authorization: this.authService.token });\r\n      let options = new RequestOptions({ headers: headers });\r\n      let objects = ({ learningStyleForm: learningStyleForm });\r\n      return this.http\r\n          .post(url, objects, options)\r\n          .toPromise()\r\n          .then(response => response.json().data)\r\n          .catch(err => this.handleError(err, \"Save learning style\"));\r\n    }\r\n\r\n    addSuitability(client, suitabilityForm: SuitabilityForm): Promise<SuitabilityForm> {\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        var url = this.clientUrl + \"/\" + client.userID;\r\n\r\n        return this.http\r\n            .post(url, suitabilityForm, options)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(err => this.handleError(err, \"Add suitability\"));\r\n    }\r\n\r\n    updateGeneralInfo(client: Client): Promise<Client> {\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        var url = 'api/general-info-update';\r\n\r\n        return this.http\r\n            .put(url, client, options)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(err => this.handleError(err, \"Update general info\"));\r\n    }\r\n\r\n    updateSuitability(suitabilityForm: SuitabilityForm): Promise<SuitabilityForm> {\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        var url = 'api/suitability-update';\r\n\r\n        return this.http\r\n            .put(url, suitabilityForm, options)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(err => this.handleError(err, \"Update suitability\"));\r\n    }\r\n\r\n    updateBannerCamBool(client: Client): Promise<Client> {\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        var url = 'api/bannerCamBool-update';\r\n\r\n        return this.http\r\n            .put(url, client, options)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(err => this.handleError(err, \"Update banner/cam boolean values\"));\r\n    }\r\n\r\n    delete(client) {\r\n      console.log(client.userID);\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        let url = `${this.clientUrl}/${client.userID}`;\r\n\r\n        return this.http\r\n            .delete(url, options)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(err => this.handleError(err, \"Delete client\"));\r\n    }\r\n\r\n    removeFromClientTable(userID) {\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        let url = `${this.clientUrl}/${userID}/remove`;\r\n\r\n        return this.http\r\n            .delete(url, options)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(err => this.handleError(err, \"Remove client\"));\r\n    }\r\n\r\n    submitAssessmentResults(assessmentResults: AssessmentResults): Promise<AssessmentResults> {\r\n        // add authorization header with jwt token\r\n        let headers = new Headers({ authorization: this.authService.token });\r\n        let options = new RequestOptions({ headers: headers });\r\n        return this.http\r\n            .post('api/submit-assessment-results', assessmentResults, options)\r\n            .toPromise()\r\n            .then(response => response.json())\r\n            .catch(err => this.handleError(err, \"Submit Assessment Results\"));\r\n    }\r\n\r\n    private handleError(error: any, name: any) {\r\n      console.log('An error occurred at ' + name, error);\r\n    }\r\n}\r\n"]}