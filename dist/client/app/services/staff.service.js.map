{"version":3,"sources":["../../client/app/services/staff.service.ts"],"names":[],"mappings":"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","file":"staff.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response, RequestOptions } from '@angular/http';\r\nimport { User } from \"../models/user\";\r\nimport { AuthService } from './authentication.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n@Injectable()\r\nexport class StaffService {\r\n\r\n  private usersUrl = 'api/staff';  // URL to web app\r\n\r\n  constructor(private http: Http,\r\n    private authService: AuthService) { }\r\n\r\n  getUsers(): Promise<User[]> {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http.get(this.usersUrl, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  getUser(id: string) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http.get(this.usersUrl + '/' + id, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  save(user: User): Promise<User> {\r\n    if (user.staffID) {\r\n      return this.put(user);\r\n    }\r\n    return this.post(user);\r\n  }\r\n\r\n  private post(user: User): Promise<User> {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http\r\n      .post(this.usersUrl, user, options)\r\n      .toPromise()\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private put(user: User) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let url = `${this.usersUrl}/${user.staffID}`;\r\n    console.log(user);\r\n    return this.http\r\n      .put(url, user, options)\r\n      .toPromise()\r\n      .then(() => user)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  delete(user: User) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    //headers.append('Content-Type', 'application/json');\r\n\r\n    let url = `${this.usersUrl}/${user.userID}`;\r\n\r\n    return this.http\r\n      .delete(url, options)\r\n      .toPromise()\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    console.log('An error occurred', error);\r\n    return Promise.reject(error.message || error);\r\n  }\r\n}\r\n"]}