{"version":3,"sources":["../../client/app/services/student.service.ts"],"names":[],"mappings":"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","file":"student.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { AuthService } from './authentication.service';\r\nimport { Student } from \"../models/student\";\r\nimport { Course } from \"../models/course\";\r\ndeclare var moment: any;\r\n\r\n@Injectable()\r\nexport class StudentService {\r\n\r\n  private studentsUrl = 'api/students';  // URL to web api\r\n\r\n  constructor(private http: Http, private authService: AuthService) { }\r\n\r\n  getStudents(): Promise<Student[]> {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http\r\n      .get(this.studentsUrl, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Get all students\"));\r\n  }\r\n\r\n  getStudent(id: string) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http\r\n      .get(this.studentsUrl + '/' + id, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"get student by id\"));\r\n  }\r\n\r\n  postNew(student: Student): Promise<Student> {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http\r\n      .post(this.studentsUrl, student, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"postNew\"));\r\n  }\r\n\r\n  archiveStudent(student: Student): Promise<Student> {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http\r\n      .post('api/archive-student', student, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"archiveStudent\"));\r\n  }\r\n\r\n  getStudentArchive() {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let url = `api/get-student-archive`;\r\n\r\n    return this.http.get(url, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Get all student archive\"));\r\n  }\r\n\r\n  updateGeneralInfo(student: Student): Promise<Student> {\r\n      // add authorization header with jwt token\r\n      let headers = new Headers({ authorization: this.authService.token });\r\n      let options = new RequestOptions({ headers: headers });\r\n\r\n      var url = 'api/students/general-info-update';\r\n\r\n      return this.http\r\n          .put(url, student, options)\r\n          .toPromise()\r\n          .then(response => response.json())\r\n          .catch(err => this.handleError(err, \"Update General Info\"));\r\n  }\r\n\r\n  requestEditConsent(): Promise<Student> {\r\n    // get current user id from web token\r\n    var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    var currentUserID = currentUser.userID;\r\n    let url = `api/students/${currentUserID}/requestEditConsent`;\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http\r\n        .put(url, options)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(err => this.handleError(err, \"Request to edit consent\"));\r\n  }\r\n\r\n  grantConsentEditPermission(student, permission): Promise<Student> {\r\n    // get current user id from web token\r\n    let url = `api/students/grantConsentEditPermission`;\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let objects = ({ student: student, permission:permission });\r\n    return this.http\r\n        .put(url, objects, options)\r\n        .toPromise()\r\n        .then(response => response.json())\r\n        .catch(err => this.handleError(err, \"Grant permission to edit consent\"));\r\n  }\r\n\r\n  courseEnroll(userID, startDate, endDate, courseID, instructorID) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let url = `api/enroll`;\r\n    var info = [{\r\n      userID: userID,\r\n      courseID: courseID,\r\n      instructorID: instructorID,\r\n      startDate: startDate,\r\n      endDate: endDate\r\n    }];\r\n\r\n    return this.http\r\n      .post(url, info, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Course enroll\"));\r\n  }\r\n\r\n  courseDrop(userID, courseID) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let url = `api/drop/${userID}/${courseID}`;\r\n\r\n    return this.http\r\n      .delete(url, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Course drop\"));\r\n  }\r\n\r\n  getTimetables() {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let url = `api/timetables`;\r\n\r\n    return this.http.get(url, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Get timetables\"));\r\n  }\r\n\r\n  getTimetablesByCourseId(courseID) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let url = `api/timetables-course-id/${courseID}`;\r\n\r\n    return this.http.get(url, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Get timetables by course\"));\r\n  }\r\n\r\n  getEventsById(userID) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let url = `api/timetable/${userID}`;\r\n    return this.http.get(url, options).toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Get events by id\"));\r\n  }\r\n\r\n  getStudentsById(timetables) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let url = `api/get-students-id`;\r\n\r\n    return this.http.post(url, timetables, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Get students by id\"));\r\n  }\r\n\r\n  saveNewNote(caseNote, studentID) {\r\n    var caseNoteObject = { caseNote: caseNote, dateTime: moment().format('YYYY-MM-DD HH:mm:ss a') };\r\n\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let url = `api/caseNotes/${studentID}`;\r\n\r\n    return this.http\r\n      .post(url, caseNoteObject, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Save new note\"));\r\n  }\r\n\r\n  getNotes(studentID) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let url = `api/caseNotes/${studentID}`;\r\n\r\n    return this.http.get(url, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Get notes\"));\r\n  }\r\n\r\n  deleteNote(noteID) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let url = `api/caseNotes/${noteID}`;\r\n\r\n    return this.http\r\n      .delete(url, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Delete notes\"));\r\n  }\r\n\r\n  insertAttendance(attendance) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let url = `api/attendance`;\r\n\r\n    return this.http\r\n      .post(url, attendance, options)\r\n      .toPromise()\r\n      .then(response => response)\r\n      .catch(err => this.handleError(err, \"Insert attendance\"));\r\n  }\r\n\r\n  populatePRF(id: string) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n    return this.http.get('api/prf/' + id, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Populate PRF\"));\r\n  }\r\n\r\n  getAllAttendance() {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let url = `api/attendance-report`;\r\n\r\n    return this.http\r\n      .get(url, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Get all attendance\"));\r\n  }\r\n\r\n  getAllFormsByID(student: Student) {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let url = `api/clientForms/${student.userID}`;\r\n\r\n    return this.http\r\n      .get(url, options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => this.handleError(err, \"Get all student forms\"));\r\n  }\r\n\r\n  private handleError(error: any, name: any) {\r\n    console.log('An error occurred at ' + name, error);\r\n  }\r\n\r\n}\r\n"]}