{"version":3,"sources":["../../client/app/services/files.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;YAOa,YAAY,GAAzB;gBAEE,YAAoB,IAAU,EACpB,WAAwB;oBADd,SAAI,GAAJ,IAAI,CAAM;oBACpB,gBAAW,GAAX,WAAW,CAAa;gBAAI,CAAC;gBAExC,mBAAmB,CAAC,MAAM;oBACvB,IAAI,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACvC,IAAI,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC;oBACpC,IAAI,KAAK,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC;oBACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;wBACjC,IAAI,KAAK,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;wBACvC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;qBACnB;oBACD,OAAO,KAAK,CAAC;gBAChB,CAAC;gBAEA,QAAQ;oBACN,0CAA0C;oBAC1C,IAAI,OAAO,GAAG,IAAI,cAAO,CAAC,EAAE,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC;oBACrE,IAAI,OAAO,GAAG,IAAI,qBAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;oBAEvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,OAAO,CAAC;yBAC3C,SAAS,EAAE;yBACX,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;yBACjC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACvB,CAAC;gBAED,QAAQ,CAAC,QAAQ;oBACf,0CAA0C;oBAC1C,IAAI,OAAO,GAAG,IAAI,cAAO,CAAC,EAAE,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC;oBACrE,IAAI,OAAO,GAAG,IAAI,qBAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;oBAEvD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,EAAE,EAAC,YAAY,EAAC,MAAM,EAAC,EAAE,OAAO,CAAC;yBAC/E,SAAS,EAAE;yBACX,IAAI,CAAC,QAAQ,CAAC,EAAE;wBACf,OAAO,IAAI,CAAC,mBAAmB,CAAE,QAAgB,CAAC,KAAK,CAAC,CAAC;oBAC3D,CAAC,CAAC;yBACD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACvB,CAAC;gBAED,MAAM,CAAC,QAAQ;oBACb,0CAA0C;oBAC1C,IAAI,OAAO,GAAG,IAAI,cAAO,CAAC,EAAE,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC;oBACrE,IAAI,OAAO,GAAG,IAAI,qBAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;oBAEvD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,GAAG,QAAQ,EAAE,OAAO,CAAC;yBAC5D,SAAS,EAAE;yBACX,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC;yBAC1B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACvB,CAAC;aAEF,CAAA;YAnDY,YAAY;gBADxB,iBAAU,EAAE;iDAGe,WAAI;oBACP,oCAAW;eAHvB,YAAY,CAmDxB;;QACD,CAAC","file":"files.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response, RequestOptions  } from '@angular/http';\r\nimport { AuthService } from './authentication.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n@Injectable()\r\nexport class FilesService {\r\n\r\n  constructor(private http: Http,\r\n    private authService: AuthService) { }\r\n\r\n base64ToArrayBuffer(base64) {\r\n    var binaryString = window.atob(base64);\r\n    var binaryLen = binaryString.length;\r\n    var bytes = new Uint8Array(binaryLen);\r\n    for (var i = 0; i < binaryLen; i++) {\r\n       var ascii = binaryString.charCodeAt(i);\r\n       bytes[i] = ascii;\r\n    }\r\n    return bytes;\r\n }\r\n\r\n  getFiles(): Promise<any> {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http.get('/api/getFiles', options)\r\n      .toPromise()\r\n      .then(response => response.json())\r\n      .catch(err => err);\r\n  }\r\n\r\n  download(filename): Promise<any> {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http.post('/api/download/' + filename, {responseType:'blob'}, options)\r\n      .toPromise()\r\n      .then(response => {\r\n        return this.base64ToArrayBuffer((response as any)._body);\r\n      })\r\n      .catch(err => err);\r\n  }\r\n\r\n  delete(filename): Promise<any> {\r\n    // add authorization header with jwt token\r\n    let headers = new Headers({ authorization: this.authService.token });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http.delete('/api/deleteFile/' + filename, options)\r\n      .toPromise()\r\n      .then(response => response)\r\n      .catch(err => err);\r\n  }\r\n\r\n}\r\n"]}