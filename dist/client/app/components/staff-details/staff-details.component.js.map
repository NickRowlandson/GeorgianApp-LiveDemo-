{"version":3,"sources":["../../client/app/components/staff-details/staff-details.component.ts"],"names":[],"mappings":"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","file":"staff-details.component.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { User } from \"../../models/User\";\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { StaffService } from \"../../services/staff.service\";\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n  selector: 'staff-edit',\r\n  templateUrl: './app/components/staff-details/staff-details.component.html',\r\n  styleUrls: ['./app/components/staff-details/staff-details.component.css']\r\n})\r\n\r\nexport class StaffDetailsComponent implements OnInit {\r\n  @Input() user: User;\r\n  newUser = false;\r\n  error: any;\r\n  navigated = false; // true if navigated here\r\n  authLevels: any;\r\n  fselected: any[] = [];\r\n  id: any;\r\n\r\n  constructor(private staffService: StaffService, private route: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    //SelectItem API with label-value pairs\r\n    this.authLevels = [\r\n      { label: 'Admin', value: 'Admin' },\r\n      { label: 'Staff', value: 'Staff' },\r\n      { label: 'Instructor', value: 'Instructor' }\r\n    ];\r\n    this.route.params.forEach((params: Params) => {\r\n      this.id = params['id'];\r\n      if (this.id === 'new') {\r\n        this.newUser = true;\r\n        this.user = new User();\r\n        this.user.notify = true;\r\n      } else {\r\n        this.newUser = false;\r\n        this.staffService\r\n          .getUser(this.id)\r\n          .then(user => {\r\n            if ((user as any).result === \"error\") {\r\n              this.displayErrorAlert((user as any));\r\n            } else {\r\n              this.user = user;\r\n              for (let item of this.user.userType.split(',')) {\r\n                this.fselected.push(item);\r\n              }\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.newUser === true) {\r\n      if (this.user.email\r\n        && this.user.firstName\r\n        && this.user.lastName\r\n        && this.fselected.toString() !== '') {\r\n        this.user.userType = this.fselected.toString();\r\n        this.staffService\r\n          .saveNew(this.user)\r\n          .then(user => {\r\n            if ((user as any).result === \"error\") {\r\n              this.displayErrorAlert((user as any));\r\n            } else if ((user as any).msg === \"Username is already in use.\") {\r\n              swal(\r\n                'Username taken',\r\n                'Please enter a different username.',\r\n                'warning'\r\n              );\r\n            } else if ((user as any).msg === \"Email is already in use.\") {\r\n              swal(\r\n                'Email in use',\r\n                'Please enter a different email.',\r\n                'warning'\r\n              );\r\n            } else if ((user as any).msg === \"Incorrect email format.\") {\r\n              swal(\r\n                'Incorrect email format',\r\n                'Please enter a proper email.',\r\n                'warning'\r\n              );\r\n            } else if ((user as any).result === \"success\") {\r\n              swal(\r\n                (user as any).title,\r\n                (user as any).msg,\r\n                'success'\r\n              );\r\n              this.goBack();\r\n            } else {\r\n              swal(\r\n                  'Error',\r\n                  'Something went wrong, please try again.',\r\n                  'error'\r\n              );\r\n            }\r\n          })\r\n          .catch(error => this.error = error); // TODO: Display error message\r\n      } else {\r\n        swal(\r\n          'Missing Input',\r\n          'Please enter all information before saving.',\r\n          'warning'\r\n        );\r\n      }\r\n    } else {\r\n      if (this.user.email\r\n        && this.fselected) {\r\n        this.user.userType = this.fselected.toString();\r\n        this.staffService\r\n          .update(this.user, this.id)\r\n          .then(user => {\r\n            if ((user as any).result === \"error\") {\r\n              this.displayErrorAlert((user as any));\r\n            }  else if ((user as any).msg === \"Username is already in use.\") {\r\n              swal(\r\n                'Username taken',\r\n                'Please enter a different username.',\r\n                'warning'\r\n              );\r\n            } else if ((user as any).msg === \"Email is already in use.\") {\r\n              swal(\r\n                'Email in use',\r\n                'Please enter a different email.',\r\n                'warning'\r\n              );\r\n            } else if ((user as any).msg === \"Incorrect email format.\") {\r\n              swal(\r\n                'Incorrect email format',\r\n                'Please enter a proper email.',\r\n                'warning'\r\n              );\r\n            } else if ((user as any).result === \"success\") {\r\n              swal(\r\n                (user as any).title,\r\n                (user as any).msg,\r\n                'success'\r\n              );\r\n              this.goBack();\r\n            } else {\r\n              swal(\r\n                  'Error',\r\n                  'Something went wrong, please try again.',\r\n                  'error'\r\n              );\r\n            }\r\n          })\r\n          .catch(error => this.error = error); // TODO: Display error message\r\n      } else {\r\n        swal(\r\n          'Missing Input',\r\n          'Please enter all information before saving.',\r\n          'warning'\r\n        );\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  displayErrorAlert(error) {\r\n    swal(\r\n        error.title,\r\n        error.msg,\r\n        'error'\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    window.history.back();\r\n  }\r\n}\r\n"]}