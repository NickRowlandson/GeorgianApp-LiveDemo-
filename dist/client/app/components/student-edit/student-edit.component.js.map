{"version":3,"sources":["../../client/app/components/student-edit/student-edit.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAiBI,8BAAoB,cAA8B,EAAU,KAAqB;oBAA7D,mBAAc,GAAd,cAAc,CAAgB;oBAAU,UAAK,GAAL,KAAK,CAAgB;oBAHjF,cAAS,GAAG,KAAK,CAAC,CAAC,yBAAyB;gBAK5C,CAAC;gBAED,uCAAQ,GAAR;oBAAA,iBAMC;oBALG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,MAAc;wBACrC,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;wBACtB,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC;6BAC7B,IAAI,CAAC,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAC,CAAC;oBACjD,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,mCAAI,GAAJ;oBACI,sBAAsB;oBACtB,4BAA4B;oBAC5B,yBAAyB;oBACzB,kCAAkC;oBAClC,yBAAyB;oBACzB,SAAS;oBACT,2CAA2C;gBAC/C,CAAC;gBAED,qCAAM,GAAN;oBACI,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBAC1B,CAAC;gBA7BQ;oBAAR,YAAK,EAAE;8CAAU,iBAAO;qEAAC;gBADjB,oBAAoB;oBANhC,gBAAS,CAAC;wBACP,QAAQ,EAAE,cAAc;wBACxB,WAAW,EAAE,2DAA2D;wBACxE,SAAS,EAAE,CAAC,0DAA0D,CAAC;qBAC1E,CAAC;qDAQsC,gCAAc,EAAiB,uBAAc;mBANxE,oBAAoB,CA+BhC;gBAAD,2BAAC;aA/BD,AA+BC;;QACD,CAAC","file":"student-edit.component.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { Student } from \"../../models/Student\";\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { StudentService } from \"../../services/student.service\";\r\n\r\n@Component({\r\n    selector: 'student-edit',\r\n    templateUrl: './app/components/student-edit/student-edit.component.html',\r\n    styleUrls: ['./app/components/student-edit/student-edit.component.css']\r\n})\r\n\r\nexport class StudentEditComponent implements OnInit {\r\n    @Input() student: Student;\r\n    error: any;\r\n    navigated = false; // true if navigated here\r\n\r\n\r\n    constructor(private studentService: StudentService, private route: ActivatedRoute) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.params.forEach((params: Params) => {\r\n            let id = params['id'];\r\n            this.studentService.getStudent(id)\r\n                .then(student => this.student = student);\r\n        });\r\n    }\r\n\r\n    save() {\r\n        // this.studentService\r\n        //     .update(this.student)\r\n        //     .then(student => {\r\n        //         this.student = student;\r\n        //         this.goBack();\r\n        //     })\r\n        //     .catch(error => this.error = error);\r\n    }\r\n\r\n    goBack() {\r\n        window.history.back();\r\n    }\r\n}\r\n"]}