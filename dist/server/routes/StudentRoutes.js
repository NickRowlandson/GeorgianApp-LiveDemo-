"use strict";
const express = require("express");
const StudentController = require("../controllers/StudentController");
var router = express.Router();
class StudentRoutes {
    constructor() {
        this._studentController = new StudentController();
    }
    get routes() {
        var controller = this._studentController;
        router.get("/students", controller.retrieve);
        router.get("/get-student-archive", controller.getStudentArchive);
        router.post("/students", controller.create);
        router.post("/archive-student", controller.archiveStudent);
        router.post("/get-students-id", controller.getStudentsById);
        router.put("/students/general-info-update", controller.updateGeneralInfo);
        router.put("/students/:_id/requestEditConsent", controller.editConsentRequest);
        router.put("/students/grantConsentEditPermission", controller.grantConsentEditPermission);
        router.get("/students/:_id", controller.findById);
        router.post("/enroll", controller.addToTimetable);
        router.delete("/drop/:_userID/:_courseID", controller.removeFromTimetable);
        router.get("/timetables", controller.getTimetables);
        router.get("/timetables-course-id/:_courseID", controller.getTimetablesByCourseId);
        router.get("/timetable/:userID", controller.getTimetablesByUserId);
        router.post("/caseNotes/:_userID", controller.createNote);
        router.get("/caseNotes/:_userID", controller.getNote);
        router.delete("/caseNotes/:_id", controller.deleteNote);
        router.post("/attendance", controller.insertAttendance);
        router.get("/attendance-report", controller.getAllAttendance);
        router.put("/students/attendance-check", controller.runScheduledEmails);
        router.get("/prf/:_id", controller.populatePRF);
        return router;
    }
}
Object.seal(StudentRoutes);
module.exports = StudentRoutes;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NlcnZlci9zcmMvcm91dGVzL1N0dWRlbnRSb3V0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLG1DQUFvQztBQUNwQyxzRUFBdUU7QUFFdkUsSUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQzlCO0lBR0k7UUFDSSxJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxpQkFBaUIsRUFBRSxDQUFDO0lBQ3RELENBQUM7SUFDRCxJQUFJLE1BQU07UUFDTixJQUFJLFVBQVUsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUM7UUFFekMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzdDLE1BQU0sQ0FBQyxHQUFHLENBQUMsc0JBQXNCLEVBQUUsVUFBVSxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDakUsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzVDLE1BQU0sQ0FBQyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsVUFBVSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQzNELE1BQU0sQ0FBQyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsVUFBVSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQzVELE1BQU0sQ0FBQyxHQUFHLENBQUMsK0JBQStCLEVBQUUsVUFBVSxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDMUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxtQ0FBbUMsRUFBRSxVQUFVLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUMvRSxNQUFNLENBQUMsR0FBRyxDQUFDLHNDQUFzQyxFQUFFLFVBQVUsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1FBQzFGLE1BQU0sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2xELE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLFVBQVUsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUNsRCxNQUFNLENBQUMsTUFBTSxDQUFDLDJCQUEyQixFQUFFLFVBQVUsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1FBQzNFLE1BQU0sQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLFVBQVUsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUNwRCxNQUFNLENBQUMsR0FBRyxDQUFDLGtDQUFrQyxFQUFFLFVBQVUsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1FBQ25GLE1BQU0sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLEVBQUUsVUFBVSxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFDbkUsTUFBTSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsRUFBRSxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDMUQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsRUFBRSxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDdEQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsRUFBRSxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDeEQsTUFBTSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsVUFBVSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDeEQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsRUFBRSxVQUFVLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUM5RCxNQUFNLENBQUMsR0FBRyxDQUFDLDRCQUE0QixFQUFFLFVBQVUsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQ3hFLE1BQU0sQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNoRCxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0NBR0o7QUFFRCxNQUFNLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQzNCLGlCQUFTLGFBQWEsQ0FBQyIsImZpbGUiOiJyb3V0ZXMvU3R1ZGVudFJvdXRlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzID0gcmVxdWlyZShcImV4cHJlc3NcIik7XHJcbmltcG9ydCBTdHVkZW50Q29udHJvbGxlciA9IHJlcXVpcmUoXCIuLi9jb250cm9sbGVycy9TdHVkZW50Q29udHJvbGxlclwiKTtcclxuXHJcbnZhciByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5jbGFzcyBTdHVkZW50Um91dGVzIHtcclxuICAgIHByaXZhdGUgX3N0dWRlbnRDb250cm9sbGVyOiBTdHVkZW50Q29udHJvbGxlcjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvciAoKSB7XHJcbiAgICAgICAgdGhpcy5fc3R1ZGVudENvbnRyb2xsZXIgPSBuZXcgU3R1ZGVudENvbnRyb2xsZXIoKTtcclxuICAgIH1cclxuICAgIGdldCByb3V0ZXMgKCkge1xyXG4gICAgICAgIHZhciBjb250cm9sbGVyID0gdGhpcy5fc3R1ZGVudENvbnRyb2xsZXI7XHJcblxyXG4gICAgICAgIHJvdXRlci5nZXQoXCIvc3R1ZGVudHNcIiwgY29udHJvbGxlci5yZXRyaWV2ZSk7XHJcbiAgICAgICAgcm91dGVyLmdldChcIi9nZXQtc3R1ZGVudC1hcmNoaXZlXCIsIGNvbnRyb2xsZXIuZ2V0U3R1ZGVudEFyY2hpdmUpO1xyXG4gICAgICAgIHJvdXRlci5wb3N0KFwiL3N0dWRlbnRzXCIsIGNvbnRyb2xsZXIuY3JlYXRlKTtcclxuICAgICAgICByb3V0ZXIucG9zdChcIi9hcmNoaXZlLXN0dWRlbnRcIiwgY29udHJvbGxlci5hcmNoaXZlU3R1ZGVudCk7XHJcbiAgICAgICAgcm91dGVyLnBvc3QoXCIvZ2V0LXN0dWRlbnRzLWlkXCIsIGNvbnRyb2xsZXIuZ2V0U3R1ZGVudHNCeUlkKTtcclxuICAgICAgICByb3V0ZXIucHV0KFwiL3N0dWRlbnRzL2dlbmVyYWwtaW5mby11cGRhdGVcIiwgY29udHJvbGxlci51cGRhdGVHZW5lcmFsSW5mbyk7XHJcbiAgICAgICAgcm91dGVyLnB1dChcIi9zdHVkZW50cy86X2lkL3JlcXVlc3RFZGl0Q29uc2VudFwiLCBjb250cm9sbGVyLmVkaXRDb25zZW50UmVxdWVzdCk7XHJcbiAgICAgICAgcm91dGVyLnB1dChcIi9zdHVkZW50cy9ncmFudENvbnNlbnRFZGl0UGVybWlzc2lvblwiLCBjb250cm9sbGVyLmdyYW50Q29uc2VudEVkaXRQZXJtaXNzaW9uKTtcclxuICAgICAgICByb3V0ZXIuZ2V0KFwiL3N0dWRlbnRzLzpfaWRcIiwgY29udHJvbGxlci5maW5kQnlJZCk7XHJcbiAgICAgICAgcm91dGVyLnBvc3QoXCIvZW5yb2xsXCIsIGNvbnRyb2xsZXIuYWRkVG9UaW1ldGFibGUpO1xyXG4gICAgICAgIHJvdXRlci5kZWxldGUoXCIvZHJvcC86X3VzZXJJRC86X2NvdXJzZUlEXCIsIGNvbnRyb2xsZXIucmVtb3ZlRnJvbVRpbWV0YWJsZSk7XHJcbiAgICAgICAgcm91dGVyLmdldChcIi90aW1ldGFibGVzXCIsIGNvbnRyb2xsZXIuZ2V0VGltZXRhYmxlcyk7XHJcbiAgICAgICAgcm91dGVyLmdldChcIi90aW1ldGFibGVzLWNvdXJzZS1pZC86X2NvdXJzZUlEXCIsIGNvbnRyb2xsZXIuZ2V0VGltZXRhYmxlc0J5Q291cnNlSWQpO1xyXG4gICAgICAgIHJvdXRlci5nZXQoXCIvdGltZXRhYmxlLzp1c2VySURcIiwgY29udHJvbGxlci5nZXRUaW1ldGFibGVzQnlVc2VySWQpO1xyXG4gICAgICAgIHJvdXRlci5wb3N0KFwiL2Nhc2VOb3Rlcy86X3VzZXJJRFwiLCBjb250cm9sbGVyLmNyZWF0ZU5vdGUpO1xyXG4gICAgICAgIHJvdXRlci5nZXQoXCIvY2FzZU5vdGVzLzpfdXNlcklEXCIsIGNvbnRyb2xsZXIuZ2V0Tm90ZSk7XHJcbiAgICAgICAgcm91dGVyLmRlbGV0ZShcIi9jYXNlTm90ZXMvOl9pZFwiLCBjb250cm9sbGVyLmRlbGV0ZU5vdGUpO1xyXG4gICAgICAgIHJvdXRlci5wb3N0KFwiL2F0dGVuZGFuY2VcIiwgY29udHJvbGxlci5pbnNlcnRBdHRlbmRhbmNlKTtcclxuICAgICAgICByb3V0ZXIuZ2V0KFwiL2F0dGVuZGFuY2UtcmVwb3J0XCIsIGNvbnRyb2xsZXIuZ2V0QWxsQXR0ZW5kYW5jZSk7XHJcbiAgICAgICAgcm91dGVyLnB1dChcIi9zdHVkZW50cy9hdHRlbmRhbmNlLWNoZWNrXCIsIGNvbnRyb2xsZXIucnVuU2NoZWR1bGVkRW1haWxzKTtcclxuICAgICAgICByb3V0ZXIuZ2V0KFwiL3ByZi86X2lkXCIsIGNvbnRyb2xsZXIucG9wdWxhdGVQUkYpO1xyXG4gICAgICAgIHJldHVybiByb3V0ZXI7XHJcbiAgICB9XHJcblxyXG5cclxufVxyXG5cclxuT2JqZWN0LnNlYWwoU3R1ZGVudFJvdXRlcyk7XHJcbmV4cG9ydCA9IFN0dWRlbnRSb3V0ZXM7XHJcbiJdfQ==
