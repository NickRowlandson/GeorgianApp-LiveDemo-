"use strict";
const moment = require("moment");
var sql = require('mssql');
var config = require('../config');
const db = config.db;
class ActivityService {
    reportActivity(type, action, result, affectedID, facultyID, info) {
        console.log("Activity logged");
        var CurrentDate = moment().format();
        sql.connect(db)
            .then(function (connection) {
            new sql.Request(connection)
                .query("INSERT INTO SiteActivity VALUES ('" + type + "', '" + affectedID + "', '" + facultyID + "', '" + CurrentDate + "','" + action + "','" + result + "','" + info + "')")
                .then(function (user) {
            }).catch(function (err) {
                console.log("Error - Insert new record into activity table: " + err);
            });
        }).catch(function (err) {
            console.log("DB Connection error - Insert new record into activity table: " + err);
        });
        if ((type === 'student' || type === 'client') && affectedID !== null) {
            sql.connect(db)
                .then(function (connection) {
                new sql.Request(connection)
                    .query("INSERT INTO CaseNotes VALUES ('" + affectedID + "', '" + facultyID + "', '" + info + "', '" + moment().format('YYYY-MM-DD HH:mm:ss a') + "')")
                    .then(function () {
                }).catch(function (err) {
                    console.log("Error - Insert new note " + err);
                });
            }).catch(function (err) {
                console.log("DB Connection error: " + err);
            });
        }
    }
}
module.exports = ActivityService;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NlcnZlci9zcmMvc2VydmljZXMvQWN0aXZpdHlTZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxpQ0FBa0M7QUFDbEMsSUFBSSxHQUFHLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQzNCLElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUNsQyxNQUFNLEVBQUUsR0FBRyxNQUFNLENBQUMsRUFBRSxDQUFDO0FBRXJCO0lBRUEsY0FBYyxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsSUFBSTtRQUNoRSxPQUFPLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDN0IsSUFBSSxXQUFXLEdBQUcsTUFBTSxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDcEMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7YUFDWixJQUFJLENBQUMsVUFBUyxVQUFVO1lBQ3ZCLElBQUksR0FBRyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUM7aUJBQzFCLEtBQUssQ0FBQyxvQ0FBb0MsR0FBRyxJQUFJLEdBQUcsTUFBTSxHQUFHLFVBQVUsR0FBRyxNQUFNLEdBQUcsU0FBUyxHQUFHLE1BQU0sR0FBRyxXQUFXLEdBQUcsS0FBSyxHQUFHLE1BQU0sR0FBRyxLQUFLLEdBQUcsTUFBTSxHQUFHLEtBQUssR0FBRyxJQUFJLEdBQUcsSUFBSSxDQUFDO2lCQUMxSyxJQUFJLENBQUMsVUFBUyxJQUFJO1lBQ25CLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFTLEdBQUc7Z0JBQ25CLE9BQU8sQ0FBQyxHQUFHLENBQUMsaURBQWlELEdBQUcsR0FBRyxDQUFDLENBQUM7WUFDdkUsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsVUFBUyxHQUFHO1lBQ25CLE9BQU8sQ0FBQyxHQUFHLENBQUMsK0RBQStELEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDckYsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFHLENBQUMsSUFBSSxLQUFLLFNBQVMsSUFBSSxJQUFJLEtBQUssUUFBUSxDQUFDLElBQUksVUFBVSxLQUFLLElBQUksRUFBRTtZQUNuRSxHQUFHLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztpQkFDWixJQUFJLENBQUMsVUFBUyxVQUFVO2dCQUN2QixJQUFJLEdBQUcsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDO3FCQUN4QixLQUFLLENBQUMsaUNBQWlDLEdBQUcsVUFBVSxHQUFHLE1BQU0sR0FBRyxTQUFTLEdBQUcsTUFBTSxHQUFHLElBQUksR0FBRyxNQUFNLEdBQUcsTUFBTSxFQUFFLENBQUMsTUFBTSxDQUFDLHVCQUF1QixDQUFDLEdBQUcsSUFBSSxDQUFDO3FCQUNySixJQUFJLENBQUM7Z0JBQ04sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFVBQVMsR0FBRztvQkFDbkIsT0FBTyxDQUFDLEdBQUcsQ0FBQywwQkFBMEIsR0FBRyxHQUFHLENBQUMsQ0FBQztnQkFDaEQsQ0FBQyxDQUFDLENBQUM7WUFDUCxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsVUFBUyxHQUFHO2dCQUNuQixPQUFPLENBQUMsR0FBRyxDQUFDLHVCQUF1QixHQUFHLEdBQUcsQ0FBQyxDQUFDO1lBQzdDLENBQUMsQ0FBQyxDQUFDO1NBQ047SUFDTCxDQUFDO0NBR0E7QUFDRCxpQkFBUyxlQUFlLENBQUMiLCJmaWxlIjoic2VydmljZXMvQWN0aXZpdHlTZXJ2aWNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbWVudCA9IHJlcXVpcmUoXCJtb21lbnRcIik7XHJcbnZhciBzcWwgPSByZXF1aXJlKCdtc3NxbCcpO1xyXG52YXIgY29uZmlnID0gcmVxdWlyZSgnLi4vY29uZmlnJyk7XHJcbmNvbnN0IGRiID0gY29uZmlnLmRiO1xyXG5cclxuY2xhc3MgQWN0aXZpdHlTZXJ2aWNlIHtcclxuXHJcbnJlcG9ydEFjdGl2aXR5KHR5cGUsIGFjdGlvbiwgcmVzdWx0LCBhZmZlY3RlZElELCBmYWN1bHR5SUQsIGluZm8pIHtcclxuY29uc29sZS5sb2coXCJBY3Rpdml0eSBsb2dnZWRcIik7XHJcbiAgdmFyIEN1cnJlbnREYXRlID0gbW9tZW50KCkuZm9ybWF0KCk7XHJcbiAgc3FsLmNvbm5lY3QoZGIpXHJcbiAgICAudGhlbihmdW5jdGlvbihjb25uZWN0aW9uKSB7XHJcbiAgICAgIG5ldyBzcWwuUmVxdWVzdChjb25uZWN0aW9uKVxyXG4gICAgICAucXVlcnkoXCJJTlNFUlQgSU5UTyBTaXRlQWN0aXZpdHkgVkFMVUVTICgnXCIgKyB0eXBlICsgXCInLCAnXCIgKyBhZmZlY3RlZElEICsgXCInLCAnXCIgKyBmYWN1bHR5SUQgKyBcIicsICdcIiArIEN1cnJlbnREYXRlICsgXCInLCdcIiArIGFjdGlvbiArIFwiJywnXCIgKyByZXN1bHQgKyBcIicsJ1wiICsgaW5mbyArIFwiJylcIilcclxuICAgICAgICAudGhlbihmdW5jdGlvbih1c2VyKSB7XHJcbiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIkVycm9yIC0gSW5zZXJ0IG5ldyByZWNvcmQgaW50byBhY3Rpdml0eSB0YWJsZTogXCIgKyBlcnIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiREIgQ29ubmVjdGlvbiBlcnJvciAtIEluc2VydCBuZXcgcmVjb3JkIGludG8gYWN0aXZpdHkgdGFibGU6IFwiICsgZXJyKTtcclxuICAgIH0pO1xyXG4gICAgaWYoKHR5cGUgPT09ICdzdHVkZW50JyB8fCB0eXBlID09PSAnY2xpZW50JykgJiYgYWZmZWN0ZWRJRCAhPT0gbnVsbCkge1xyXG4gICAgICBzcWwuY29ubmVjdChkYilcclxuICAgICAgICAudGhlbihmdW5jdGlvbihjb25uZWN0aW9uKSB7XHJcbiAgICAgICAgICBuZXcgc3FsLlJlcXVlc3QoY29ubmVjdGlvbilcclxuICAgICAgICAgICAgLnF1ZXJ5KFwiSU5TRVJUIElOVE8gQ2FzZU5vdGVzIFZBTFVFUyAoJ1wiICsgYWZmZWN0ZWRJRCArIFwiJywgJ1wiICsgZmFjdWx0eUlEICsgXCInLCAnXCIgKyBpbmZvICsgXCInLCAnXCIgKyBtb21lbnQoKS5mb3JtYXQoJ1lZWVktTU0tREQgSEg6bW06c3MgYScpICsgXCInKVwiKVxyXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJFcnJvciAtIEluc2VydCBuZXcgbm90ZSBcIiArIGVycik7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coXCJEQiBDb25uZWN0aW9uIGVycm9yOiBcIiArIGVycik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG59XHJcbmV4cG9ydCA9IEFjdGl2aXR5U2VydmljZTtcclxuIl19
